@startuml 
skinparam classAttributeIconSize 0
' this is to use the standard notation for public, protected, private

class Main {
- {static} NUM_SQUARES : int
- {static} PLAYER_NAMES : String[]
- {static} SNAKES_FROM_TO : int[][]
- {static} LADDERS_FROM_TO : int[][]
- {static} main(String[] args)
}

class Game {
    + Game(playerNames: String[], numSquares : int, \n\t    snakes : int[][], ladders : int[][])
    + play()
    - makeBoard(numSquares : int, \n\t\t  snakes : int[][], ladders : int[][], deathSquares : int[])
    - makePlayers(names : String[])
    - initializeGame()
    - placePlayersAtFirstSquare()
    - notOver() : boolean
    - moreThanOnePlayerAlive() : boolean
    - movePlayer(roll : int)
    - currentPlayer() : Player
}

class Board {
    - {static} MIN_NUM_SQUARES : int
    + Board(numSquares : int, snakes : int[][], ladders : int[][], deathSquares : int[])
    + firstSquare() : Square
    + lastSquare() : Square
    + findSquare() : Square
    + numberOfSquares() : int
    - makeSnakesOrLadders(snakesOrLadders : int[][])
    - makeDeaths(deathSquares : int[])
}

class Die {
    - {static} MIN_VALUE : int = 1
    - {static} MAX_VALUE : int = 6
    + roll() : int
}

class Square {
    # position : int
    + Square(pos : int, board : Board)
    + isLastSquare() : boolean
    + enter(p : Player)
    + leave(p : Player)
    + isOccupied() : boolean
    + getPosition() : int
    + moveAndLand(moves : int)
    # landHereOrGoHome() : Square
    # findRelativeSquare(shift : int) : Square
    # findFirstSquare() : Square
}

class Player {
    - name : String
    - dead : boolean
    + moveForward(moves : int)
    + getPosition() : int
    + isDead() : boolean
    + setDead(d : boolean)
    + wins() : boolean
}

class SnakeOrLadder extends Square {
    - transport : int
    # landHereOrGoHome() : Square
    - destination() : Square
}

class Death extends Square {
    + enter(p : Player)
}

class FirstSquare extends Square {
    + FirstSquare(board : Board)
    + isOccupied() : boolean
    + enter(p : Player)
    + leave(p : Player)
}

' relative position of classes not related by association
' or composition with hidden arrows
Main -[hidden]right-> Game
Game -[hidden]down-> Die

'associations
Game x--right--> "1" Board : board
Board "1\nboard" *-down-> "10...*" Square : squares
Game *-down-> "1..*" Player : players
Game x-down-> "0,1" Player : winner
Square -down-> "0,1" Player : player
Player -up-> "1" Square : square
FirstSquare -left-> "*" Player : players
@enduml